using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Proggen.Generators.Common;

namespace Proggen.Generators.Common
{
    internal static class WebAPIFileSpecs
    {
        public static FileSpec[] WebAPISpecs { get; } =
        {
            new FileSpec {
                Pathname = "$$(PROJECTNAME)/appsettings.Development.json",
                Contents = new [] {
                    "{",
                    "  \"Logging\": {",
                    "    \"IncludeScopes\": false,",
                    "    \"LogLevel\": {",
                    "      \"Default\": \"Debug\",",
                    "      \"System\": \"Information\",",
                    "      \"Microsoft\": \"Information\"",
                    "    }",
                    "  }",
                    "}"
                }
            },
            new FileSpec {
                Pathname = "$$(PROJECTNAME)/appsettings.json",
                Contents = new [] {
                    "{",
                    "  \"Logging\": {",
                    "    \"IncludeScopes\": false,",
                    "    \"LogLevel\": {",
                    "      \"Default\": \"Warning\"",
                    "    }",
                    "  }",
                    "}"
                }
            },
            new FileSpec {
                Pathname = "$$(PROJECTNAME)/program.cs",
                Contents = new [] {
                    "using System;",
                    "using System.Collections.Generic;",
                    "using System.IO;",
                    "using System.Linq;",
                    "using System.Threading.Tasks;",
                    "using Microsoft.AspNetCore.Builder;",
                    "using Microsoft.AspNetCore.Hosting;",
                    "",
                    "namespace $$(PROJECTNAMECAMEL)",
                    "{",
                    "    public class Program",
                    "    {",
                    "        public static void Main(string[] args)",
                    "        {",
                    "            var host = new WebHostBuilder()",
                    "                .UseKestrel()",
                    "                .UseContentRoot(Directory.GetCurrentDirectory())",
                    "                .UseIISIntegration()",
                    "                .UseStartup<Startup>()",
                    "                .UseApplicationInsights()",
                    "                .Build();",
                    "",
                    "            host.Run();",
                    "        }",
                    "    }",
                    "}"
                }
            },
            new FileSpec {
                Pathname = "$$(PROJECTNAME)/runtimeconfig.template.json",
                Contents = new [] {
                    "{",
                    "  \"configProperties\": {",
                    "    \"System.GC.Server\": true",
                    "  }",
                    "}"
                }
            },
            new FileSpec {
                Pathname = "$$(PROJECTNAME)/startup.cs",
                Contents = new [] {
                    "using System;",
                    "using System.Collections.Generic;",
                    "using System.Linq;",
                    "using System.Threading.Tasks;",
                    "using Microsoft.AspNetCore.Builder;",
                    "using Microsoft.AspNetCore.Hosting;",
                    "using Microsoft.Extensions.Configuration;",
                    "using Microsoft.Extensions.DependencyInjection;",
                    "using Microsoft.Extensions.Logging;",
                    "",
                    "namespace $$(PROJECTNAMECAMEL)",
                    "{",
                    "    public class Startup",
                    "    {",
                    "        public Startup(IHostingEnvironment env)",
                    "        {",
                    "            var builder = new ConfigurationBuilder()",
                    "                .SetBasePath(env.ContentRootPath)",
                    "                .AddJsonFile(\"appsettings.json\", optional: false, reloadOnChange: true)",
                    "                .AddJsonFile($\"appsettings.{env.EnvironmentName}.json\", optional: true)",
                    "                .AddEnvironmentVariables();",
                    "            Configuration = builder.Build();",
                    "        }",
                    "",
                    "        public IConfigurationRoot Configuration { get; }",
                    "",
                    "        // This method gets called by the runtime. Use this method to add services to the container.",
                    "        public void ConfigureServices(IServiceCollection services)",
                    "        {",
                    "            // Add framework services.",
                    "            services.AddMvc();",
                    "        }",
                    "",
                    "        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.",
                    "        public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)",
                    "        {",
                    "            loggerFactory.AddConsole(Configuration.GetSection(\"Logging\"));",
                    "            loggerFactory.AddDebug();",
                    "",
                    "            app.UseMvc();",
                    "        }",
                    "    }",
                    "}"
                }
            },
            new FileSpec {
                Pathname = "$$(PROJECTNAME)/web.config",
                Contents = new [] {
                    "<?xml version=\"1.0\" encoding=\"utf-8\"?>",
                    "<configuration>",
                    "",
                    "  <!--",
                    "  Configure your application settings in appsettings.json. Learn more at https://go.microsoft.com/fwlink/?LinkId=786380",
                    "",
                    "  <appSettings>",
                    "      appSettings in web.config is no longer used in ASP.NET Core, instead use appsettings.json",
                    "  </appSettings>",
                    "  -->",
                    "",
                    "  <system.webServer>",
                    "    <handlers>",
                    "      <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\"/>",
                    "    </handlers>",
                    "    <aspNetCore processPath=\"%LAUNCHER_PATH%\" arguments=\"%LAUNCHER_ARGS%\" stdoutLogEnabled=\"false\" stdoutLogFile=\".\\logs\\stdout\" forwardWindowsAuthToken=\"false\"/>",
                    "  </system.webServer>",
                    "</configuration>"
                }
            },
            new FileSpec {
                Pathname = "$$(PROJECTNAME)/Controllers/ValuesController.cs",
                Contents = new [] {
                    "using System;",
                    "using System.Collections.Generic;",
                    "using System.Linq;",
                    "using System.Threading.Tasks;",
                    "using Microsoft.AspNetCore.Mvc;",
                    "",
                    "namespace $$(PROJECTNAMECAMEL).Controllers",
                    "{",
                    "    [Route(\"api/[controller]\")]",
                    "    public class ValuesController : Controller",
                    "    {",
                    "        // GET api/values",
                    "        [HttpGet]",
                    "        public IEnumerable<string> Get()",
                    "        {",
                    "            return new string[] { \"value1\", \"value2\" };",
                    "        }",
                    "",
                    "        // GET api/values/5",
                    "        [HttpGet(\"{id}\")]",
                    "        public string Get(int id)",
                    "        {",
                    "            return \"value\";",
                    "        }",
                    "",
                    "        // POST api/values",
                    "        [HttpPost]",
                    "        public void Post([FromBody]string value)",
                    "        {",
                    "        }",
                    "",
                    "        // PUT api/values/5",
                    "        [HttpPut(\"{id}\")]",
                    "        public void Put(int id, [FromBody]string value)",
                    "        {",
                    "        }",
                    "",
                    "        // DELETE api/values/5",
                    "        [HttpDelete(\"{id}\")]",
                    "        public void Delete(int id)",
                    "        {",
                    "        }",
                    "    }",
                    "}"
                }
            },
            new FileSpec {
                Pathname = "$$(PROJECTNAME)/Properties/launchSettings.json",
                Contents = new [] {
                    "{",
                    "  \"iisSettings\": {",
                    "    \"windowsAuthentication\": false,",
                    "    \"anonymousAuthentication\": true,",
                    "    \"iisExpress\": {",
                    "      \"applicationUrl\": \"http://localhost:14292/\",",
                    "      \"sslPort\": 0",
                    "    }",
                    "  },",
                    "  \"profiles\": {",
                    "    \"IIS Express\": {",
                    "      \"commandName\": \"IISExpress\",",
                    "      \"launchBrowser\": true,",
                    "      \"launchUrl\": \"api/values\",",
                    "      \"environmentVariables\": {",
                    "        \"ASPNETCORE_ENVIRONMENT\": \"Development\"",
                    "      }",
                    "    },",
                    "    \"$$(PROJECTNAMECAMEL)\": {",
                    "      \"commandName\": \"Project\",",
                    "      \"launchBrowser\": true,",
                    "      \"launchUrl\": \"api/values\",",
                    "      \"environmentVariables\": {",
                    "        \"ASPNETCORE_ENVIRONMENT\": \"Development\"",
                    "      },",
                    "      \"applicationUrl\": \"http://localhost:14293\"",
                    "    }",
                    "  }",
                    "}"
                }
            },
            new FileSpec {
                Pathname = "$$(PROJECTNAME)/$$(PROJECTNAME).$$(SUFFIX)",
                Contents = new [] {
                    "<Project ToolsVersion=\"15.0\" Sdk=\"Microsoft.NET.Sdk.Web\">",
                    "",
                    "  <PropertyGroup>",
                    "    <TargetFramework>netcoreapp1.1</TargetFramework>",
                    "  </PropertyGroup>",
                    "",
                    "  <ItemGroup>",
                    "    <Folder Include=\"wwwroot\\\" />",
                    "  </ItemGroup>",
                    "",
                    "  <ItemGroup>",
                    "    <PackageReference Include=\"Microsoft.ApplicationInsights.AspNetCore\" Version=\"2.0.0-beta1\" />",
                    "    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"1.1.0\" />",
                    "    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"1.1.1\" />",
                    "    <PackageReference Include=\"Microsoft.Extensions.Logging.Debug\" Version=\"1.1.0\" />",
                    "  </ItemGroup>",
                    "  <ItemGroup>",
                    "    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"1.0.0-msbuild3-final\" />",
                    "  </ItemGroup>",
                    "</Project>"
                }
            },
            new FileSpec {
                Pathname = "$$(PROJECTNAME).sln",
                Contents = new [] {
                    "Microsoft Visual Studio Solution File, Format Version 12.00",
                    "# Visual Studio 15",
                    "VisualStudioVersion = 15.0.26127.3",
                    "MinimumVisualStudioVersion = 10.0.40219.1",
                    "Project(\"{$$(PROJECTTYPEGUID)}\") = \"$$(PROJECTNAMECAMEL)\", \"$$(PROJECTNAMECAMEL)\\$$(PROJECTNAMECAMEL).csproj\", \"{$$(PROJECTGUID)}\"",
                    "EndProject",
                    "Global",
                    "	GlobalSection(SolutionConfigurationPlatforms) = preSolution",
                    "		Debug|Any CPU = Debug|Any CPU",
                    "		Debug|x64 = Debug|x64",
                    "		Debug|x86 = Debug|x86",
                    "		Release|Any CPU = Release|Any CPU",
                    "		Release|x64 = Release|x64",
                    "		Release|x86 = Release|x86",
                    "	EndGlobalSection",
                    "	GlobalSection(ProjectConfigurationPlatforms) = postSolution",
                    "		{$$(PROJECTGUID)}.Debug|Any CPU.ActiveCfg = Debug|Any CPU",
                    "		{$$(PROJECTGUID)}.Debug|Any CPU.Build.0 = Debug|Any CPU",
                    "		{$$(PROJECTGUID)}.Debug|x64.ActiveCfg = Debug|x64",
                    "		{$$(PROJECTGUID)}.Debug|x64.Build.0 = Debug|x64",
                    "		{$$(PROJECTGUID)}.Debug|x86.ActiveCfg = Debug|x86",
                    "		{$$(PROJECTGUID)}.Debug|x86.Build.0 = Debug|x86",
                    "		{$$(PROJECTGUID)}.Release|Any CPU.ActiveCfg = Release|Any CPU",
                    "		{$$(PROJECTGUID)}.Release|Any CPU.Build.0 = Release|Any CPU",
                    "		{$$(PROJECTGUID)}.Release|x64.ActiveCfg = Release|x64",
                    "		{$$(PROJECTGUID)}.Release|x64.Build.0 = Release|x64",
                    "		{$$(PROJECTGUID)}.Release|x86.ActiveCfg = Release|x86",
                    "		{$$(PROJECTGUID)}.Release|x86.Build.0 = Release|x86",
                    "	EndGlobalSection",
                    "	GlobalSection(SolutionProperties) = preSolution",
                    "		HideSolutionNode = FALSE",
                    "	EndGlobalSection",
                    "EndGlobal",
                }
            },
        };
    }
}
